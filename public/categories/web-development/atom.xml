<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web Development | William John Bert]]></title>
  <link href="http://williamjohnbert.com/categories/web-development/atom.xml" rel="self"/>
  <link href="http://williamjohnbert.com/"/>
  <updated>2013-05-27T16:05:31-04:00</updated>
  <id>http://williamjohnbert.com/</id>
  <author>
    <name><![CDATA[William John Bert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zero to Node, Again]]></title>
    <link href="http://williamjohnbert.com/2013/01/reprise-of-zero-to-node/"/>
    <updated>2013-01-17T08:09:00-05:00</updated>
    <id>http://williamjohnbert.com/2013/01/reprise-of-zero-to-node</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.meetup.com/node-dc/events/98796672/">NodeDC's January meetup</a>,
I'll be giving a reprise of my
<a href="http://sandinmyjoints.github.com/zero-to-node/">Zero to Node</a> talk, about
designing, coding, and launching my first web service using Node.js. The meetup
is Wednesday, Jan 23, at Stetson's (1610 U St NW). Hope to see you there!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Case Study of Node.js in Production]]></title>
    <link href="http://williamjohnbert.com/2012/10/a-case-study-of-node-js-in-production/"/>
    <updated>2012-10-01T17:27:53-04:00</updated>
    <id>http://williamjohnbert.com/2012/10/a-case-study-of-node-js-in-production</id>
    <content type="html"><![CDATA[<p>I'm giving a talk about my experience <a href="http://www.meetup.com/Nova-Node/events/84918342/">developing and deploying a Node.js web
service in production</a> at the
next Nova-Node meetup, October 30 at 6:30 p.m. Below is the writeup. If it
sounds interesting to you, come by!</p>

<blockquote><p>SpanishDict recently deployed a new text-to-speech service powered by
  Node. This service can generate audio files on the fly for arbitrary Spanish
  and English texts with rapid response times. The presentation will walk
  through the design, development, testing, monitoring, and deployment process
  for the new application. We will cover topics like how to structure an Express
  app, testing and debugging, learning to think in streams and pipes, writing a
  Chef cookbook to deploy to AWS, and monitoring the application for high
  performance. The lead engineer on the project, William Bert, will also talk
  about his experiences transitioning from a Python background to Node and some
  of the key insights he had about writing in Node while developing the
  application.</p></blockquote>

<p>Update: <a href="http://sandinmyjoints.github.com/zero-to-node">here are the slides from the talk</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ExtJS TreeStore trouble with nested nodes]]></title>
    <link href="http://williamjohnbert.com/2012/04/extjs-treestore-trouble-with-nested-nodes/"/>
    <updated>2012-04-19T06:23:07-04:00</updated>
    <id>http://williamjohnbert.com/2012/04/extjs-treestore-trouble-with-nested-nodes</id>
    <content type="html"><![CDATA[<p>At work, we're building an app to edit objects in a database--a classic CRUD
application. For now, we're trying out ExtJS as the client-side UI
framework. One of the use cases is selecting and editing nested objects,
represented in our relational database with foreign keys. Let's call the root
object a Task, which consists of nested Goals, which have Steps. Each of those
is defined by a model on the backend that is more or less mimicked by an
Ext.data.Model on the client-side, and each model has a proxy to a RESTful
endpoint on the backend for create/retrieve/update/delete operations. We want to
use an Ext.tree.TreePanel for the UI, so we hold the data in an
Ext.data.TreeStore. So far so good.</p>

<p>We coded up our prototype, but when a user selects a Task, Ext JS throws this
error: <code>Uncaught TypeError: Cannot read property 'internalId' of
undefined</code>. Hmm. Everything seems to be working. Our models are loading the
correct data. No obvious bugs. A lot of inspecting and googling and reading
documentation later, I discover <a href="http://www.sencha.com/forum/archive/index.php/t-160068.html?s=03fb3a67ebf1e1ef856bc5f277ad12e8">this
thread</a>. The
key quote:</p>

<!-- more -->


<blockquote><p>It doesn't matter if the [model] ids are unique within the JSON [or any
  data]. It must be unique within the tree.</p></blockquote>

<p>If you add the first json to the tree with for example the id 4_1 and you add
the second json with again a node 4_1 then you have two nodes with the same id.</p>

<p>In other words, TreeStore doesn't distinguish the types of roots and their
children (or children's children, etc). To TreeStore, they are <strong>all</strong> nodes,
and ids must be unique across all nodes. If you have an instance of a Task model
with id=1 and it has a foreign key to a Goal that also has id=1, TreeStore has a
problem with that. Apparently it doesn't introspect the objects enough to see
that, say, one is a Task and its children are Goals, despite the Task model
having a <code>hasMany</code> field that defines its relation to the Goal model. That seems
counterintuitive to me, maybe even misleading. Perhaps that's why we're not the
only ones who've
<a href="http://www.sencha.com/forum/showthread.php?129524-CLOSED-Selection-of-Association-in-DataView">had</a>
<a href="http://www.sencha.com/forum/showthread.php?135285-TreeStore-Model-and-quot-id-quot-field">this</a>
<a href="http://www.sencha.com/forum/showthread.php?196396-How-to-add-children-tree-nodes-dynamically">problem</a>.</p>

<p>My quick fix was to write a <code>stringify_id()</code> function to wrap ids passed to the TreeStore with a prefix unique to each type, so the id of Task id=1 becomes "task-1". <code>destringify_id()</code> unwraps the ids that come back through the proxy.</p>

<p>TreeStore's <a href="http://docs.sencha.com/ext-js/4-0/#!/api/Ext.data.TreeStore">docs</a> do not mention this restriction, as far as I can tell. Maybe if you purchase Ext JS, you get better docs, I'm not sure. We may be doing just that, so I could have a chance to find out. One of the complaints you sometimes hear about open source is that the docs aren't that great, so I'm curious to see how a for-profit company's docs stack up against the documentation culture of the communities I'm most familiar with (Python and Django), which tend to be pretty solid.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install accelerated BLAS into a Python virtualenv]]></title>
    <link href="http://williamjohnbert.com/2012/03/how-to-install-accelerated-blas-into-a-python-virtualenv/"/>
    <updated>2012-03-23T16:43:33-04:00</updated>
    <id>http://williamjohnbert.com/2012/03/how-to-install-accelerated-blas-into-a-python-virtualenv</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>Some mathematically intense operations that use Numpy/Scipy can run faster with accelerated basic linear algebra subroutine (BLAS) libraries installed on your system (e.g., <a href="http://radimrehurek.com/gensim/">gensim's</a> corpus processing).</p>

<p>To see what BLAS libraries you are using, do:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&#39;import numpy; numpy.show_config()&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If none of them are installed, you probably want to install one or
more. <a href="http://math-atlas.sourceforge.net/">ATLAS</a> is always a good bet, since
it's portable and self-optimizing. There are others out there targeted at
particular CPU architectures.</p>

<!-- more -->


<p>Unfortunately, the <a href="http://docs.scipy.org/doc/numpy/user/install.html">Scipy
docs</a> are out of date
regarding installing accelerated BLAS libraries on Ubuntu. The instructions I
have written below work for Ubuntu 10.04, the current LTS (long-term support)
version, and though I haven't tried to run them on a more recent version, it's
possible they work with those as well.</p>

<h2>Prereqs</h2>

<p>On Ubuntu 10.04, and possibly other versions, you need liblapack-dev and gfortran (yes, fortran):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install liblapack-dev
</span><span class='line'><span class="nv">$ </span>sudo apt-get install gfortran
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Instructions</h2>

<p>Install the accelerated linear algebra libraries (ATLAS/LAPACK) in your virtualenv on Ubutu:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;workon <span class="o">[</span>envname<span class="o">]</span>
</span><span class='line'>pip uninstall numpy <span class="c">## only if numpy is already installed</span>
</span><span class='line'>pip uninstall scipy <span class="c">## only if scipy is already installed</span>
</span><span class='line'><span class="nb">export </span><span class="nv">LAPACK</span><span class="o">=</span>/usr/lib/liblapack.so
</span><span class='line'><span class="nb">export </span><span class="nv">ATLAS</span><span class="o">=</span>/usr/lib/libatlas.so
</span><span class='line'><span class="nb">export </span><span class="nv">BLAS</span><span class="o">=</span>/usr/lib/libblas.so
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now you can install numpy and scipy into the same virtualenv and be confident they will perform operations using the accelerated BLAS routines:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install numpy
</span><span class='line'><span class="nv">$ </span>pip install scipy
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[django-social-auth: Installing and troubleshooting]]></title>
    <link href="http://williamjohnbert.com/2011/08/django-social-auth-installing-and-troubleshooting/"/>
    <updated>2011-08-26T07:16:14-04:00</updated>
    <id>http://williamjohnbert.com/2011/08/django-social-auth-installing-and-troubleshooting</id>
    <content type="html"><![CDATA[<p>Thanks to <code>django-registration</code>, I was able to build a working account
registration/login system pretty easily. But I wanted to give users the ability
to use their existing accounts through popular services such as Facebook,
Twitter, etc., rather than have to create yet another account. Here's how I did
it.</p>

<h1>Sorting Through the Choices</h1>

<p>There are a number of reusable Django apps out there to help with
registration/login from social media sites. I found this <a href="http://hackerluddite.wordpress.com/2011/05/17/review-of-4-django-social-auth-apps/">Review of 4 Django Social Auth apps</a>
very helpful in sorting out the options. After reading it, I was left to choose
between <a href="https://github.com/omab/django-social-auth"><code>django-social-auth</code></a> (I
originally linked to the wrong app here, but this link is correct) and
<a href="https://github.com/pennersr/django-allauth"><code>django-allauth</code></a>. In the end, I
went with <code>django-social-auth</code> (not to be confused with <code>django-socialauth</code>)
because a friend had recommended it and because I'd already installed it before
I read this article. However, the article's conclusion that <code>django-allauth</code> is
best out of the box also seems valid.</p>

<h1>Installation</h1>

<p>The instructions in <a href="http://django-social-auth.readthedocs.org/en/latest/"><code>django-social-auth</code>'s docs</a> are helpful in
walking you through available settings and options.</p>

<p>I also found the included example app useful. To use this app, I cloned
<code>django-social-auth</code>'s git repo, created a virtualenv called
<code>django-social-auth</code>, ran <code>pip install -r requirements.txt</code> inside this
virtualenv to install all the required apps, ran <code>manage.py syncdb</code>, and finally
ran <code>manage.py runserver</code>. Voila, example app is up and running at 127.0.0.1,
showing a simple screen with options to login through about a dozen different
different services.</p>

<h1>API Keys</h1>

<p>The first service I tested was Twitter. I use it more than any others, and I
already had the API keys for it. I threw my API key and secret key into the
example <code>local_settings.py</code> file provided with <code>django-social-auth</code> and tried to
log in via the example app. Boom: <code>401 Unauthorized</code>. I double-checked all my
settings and installation and whatnot. Seemed fine.</p>

<p>I turned my attention to the API keys. The ones I had were generated for
<a href="http://www.readsrs.com">Readsr</a>, i.e., I entered readsrs.com as the domain when
I generated them at dev.twitter.com. But now I was running on localhost,
127.0.0.1, so I suspected the readsrs.com keys wouldn't be valid. I wasn't sure
whether Twitter would hand over a new consumer key for 127.0.0.1, or baulk at
the request. (It seemed like it should do so, but I hadn't seen any instructions
anywhere that said to get a key for your development machine.) Turns out Twitter
will happily give you a key for 127.0.0.1. Once I plugged the new keys in, I was
able to log in with my Twitter credentials, and just as it should,
<code>django-social-auth</code> automatically created an <code>auth.user</code> for this account.</p>

<h1>Integrating with Readsr</h1>

<p>I followed the instructions again to config my own app, Readsr. To add a login
option using Twitter credentials, I put a link to the reversed view that begins
the <code>django-social-auth</code> login process for twitter, i.e., <code>{% url
socialauth_begin "twitter" %}</code>, to my login template. And it worked.</p>

<p>I still need to fix a few oddities. For example, Twitter returns my first and
last names together in <code>first_name</code> (or else <code>django-social-auth</code> is
concatenating them into that column), and doesn't supply any email address. But
the basic functionality is there, and was relatively easy to achieve.</p>

<h1>Postscript</h1>

<p>The author of the article I linked above had an error using OpenID when using <code>django-social-auth</code>, which is why he preferred <code>django-authall</code>. He filed a bug
for the error he got, and I notice that <a href="https://github.com/omab/django-social-auth/issues/67">it was closed</a> 15 hours ago
(though if you read the comments, it seems it was actually fixed back in
mid-July). Good timing.</p>
]]></content>
  </entry>
  
</feed>
